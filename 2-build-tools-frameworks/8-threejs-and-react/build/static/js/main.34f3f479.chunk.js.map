{"version":3,"sources":["js/Title.js","../../../../example-js-symlink/vendor/three/controls/OrbitControls.module.js","../../../../example-js-symlink/vendor/App.module.js","../../../../example-js-symlink/vendor/utility/createAsyncLoader.module.js","../../../../example-js-symlink/vendor/three/loaders/GLTFLoader.module.js","js/models.js","js/Scene.js","js/lights.js","index.js"],"names":["Title","react_default","a","createElement","className","href","React","Component","OrbitControls_module_OrbitControls","object","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","this","undefined","document","enabled","target","build_three_module","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","prototype","Object","create","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","App_module_THREE_APP","THREE_APP","container","classCallCheck","querySelector","scene","clock","running","alpha","antialias","powerPreference","stencil","gammaFactor","gammaOutput","physicallyCorrectLights","autoResize","maxPixelRatio","controlsAutoUpdate","onUpdate","onResize","showStats","error","concat","createClass","key","_this","initCamera","initControls","initRenderer","initStats","onWindowResize","camera","controls","renderer","setSize","setPixelRatio","devicePixelRatio","e","appendChild","render","delta","getDelta","traverse","child","userData","_this2","setAnimationLoop","stats","begin","end","aspect","Stats","dom","createAsyncLoader_module","loader","onProgress","arguments","load","_load","asyncToGenerator","regenerator_default","mark","_callee","url","wrap","_context","prev","next","abrupt","Promise","resolve","reject","Error","stop","_x","apply","GLTFLoader_module_GLTFLoader","GLTFLoader","manager","dracoLoader","GLTFRegistry","objects","remove","removeAll","crossOrigin","onLoad","onError","resourcePath","path","extractUrlBase","itemStart","_onError","itemError","itemEnd","setPath","setResponseType","data","parse","gltf","setCrossOrigin","setResourcePath","setDRACOLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","extensionsUsed","i","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","indexOf","parser","GLTFParser","scenes","cameras","animations","glTF","addUnknownExtensionsToUserData","THREE","DDSLoader","name","ddsLoader","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","fromArray","range","spot","innerConeAngle","outerConeAngle","penumbra","decay","intensity","getMaterialType","material","extendParams","materialParams","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","DRACOLoader","getDecoderModule","specularGlossinessParams","params","pbrSpecularGlossiness","shader","uniforms","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","STANDARD","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","refreshUniforms","geometry","group","uvScaleMap","diffuse","isWebGLRenderTarget","texture","matrixAutoUpdate","updateMatrix","uvTransform","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","call","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","transform","rotation","repeat","texCoord","needsUpdate","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","Number","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","image/jpeg","resolveURL","test","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","isObjectEqual","b","isArrayEqual","getCachedGeometry","cache","newPrimitive","cached","dracoExtA","dracoExtB","indices","promise","cloneBufferAttribute","isInterleavedBufferAttribute","count","itemSize","j","getX","getY","getZ","getW","options","primitiveCache","multiplePrimitivesCache","multiPassGeometryCache","textureLoader","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","addAttribute","gltfAttributeName","threeAttributeName","setIndex","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","normal","morphPositions","morphNormals","positionAttribute","jl","setXYZ","normalAttribute","morphAttributes","addMorphTargets","markDefs","getMultiDependencies","dependencies","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","getDependencies","defs","def","types","results","bind","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibCacheKey","ib","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","URL","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","Handlers","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","materialIndex","materialType","materialDef","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","loadGeometries","primitives","originalPrimitives","isMultiPass","primitive0","targets0","mode","isMultiPassGeometry","createDracoPrimitive","geometryPromise","geometries","baseGeometry","getCachedMultiPassGeometry","pendingIndices","addGroup","BufferGeometryUtils","baseGeometries","getCachedCombinedGeometry","mergeBufferGeometries","meshIndex","depthTest","originalMaterials","isMultiMaterial","groups","normalizeSkinWeights","drawMode","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","isLine","lineMaterial","cachedMaterial","skinning","vertexColors","flatShading","morphTargets","uv2","uv","log","onBeforeRender","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","isMesh","track","arraySlice","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","children","o","light","sanitizeNodeName","applyMatrix","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","isGroup","bones","boneInverses","jointNode","mat","matrixWorld","sceneIndex","sceneDef","nodeIds","setupModel","model","animation","mixer","AnimationMixer","clipAction","play","loadModels","_loadModels","parrot","flamingo","stork","createAsyncLoader","sent","t2","Vector3","t3","t4","t5","t6","t7","t8","Scene","app","ThreeApp","init","background","Color","start","ambient","main","HemisphereLight","DirectionalLight","models","mount","removeChild","ref","App","js_Title","js_Scene","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.34f3f479.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Title extends React.Component {\r\n  render() {\r\n    return (\r\n      <h1 className=\"title\"><a href=\"https://discoverthreejs.com/\">Discoverthreejs.com</a> - Ch 2.2  </h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;","/**\r\n * @author qiao / https://github.com/qiao\r\n * @author mrdoob / http://mrdoob.com\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author erich666 / http://erichaines.com\r\n */\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, Vector2, Vector3 } from 'three';\n\nvar OrbitControls = function OrbitControls(object, domElement) {\n  this.object = object;\n  this.domElement = domElement !== undefined ? domElement : document; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.25; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = false; // if true, pan in screen-space\n\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n  // Set to false to disable use of the keys\n\n  this.enableKeys = true; // The four arrow keys\n\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    LEFT: MOUSE.LEFT,\n    MIDDLE: MOUSE.MIDDLE,\n    RIGHT: MOUSE.RIGHT\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new Vector3(); // so camera.up is the orbit axis\n\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi; // restrict theta to be between desired limits\n\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      scope.target.add(panOffset);\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1; // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    window.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY_PAN: 4\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n    var v = new Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    //console.log( 'handleMouseDownRotate' );\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    //console.log( 'handleMouseDownDolly' );\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    //console.log( 'handleMouseDownPan' );\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    //console.log( 'handleMouseMoveRotate' );\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    //console.log( 'handleMouseMoveDolly' );\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    //console.log( 'handleMouseMovePan' );\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function handleMouseUp(event) {// console.log( 'handleMouseUp' );\n  }\n\n  function handleMouseWheel(event) {\n    // console.log( 'handleMouseWheel' );\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    //console.log( 'handleKeyDown' );\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    //console.log( 'handleTouchStartRotate' );\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    //console.log( 'handleTouchStartDollyPan' );\n    if (scope.enableZoom) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    if (scope.enablePan) {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchMoveRotate(event) {\n    //console.log( 'handleTouchMoveRotate' );\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    //console.log( 'handleTouchMoveDollyPan' );\n    if (scope.enableZoom) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyIn(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    if (scope.enablePan) {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    scope.update();\n  }\n\n  function handleTouchEnd(event) {} //console.log( 'handleTouchEnd' );\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (event.button) {\n      case scope.mouseButtons.LEFT:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        }\n\n        break;\n\n      case scope.mouseButtons.MIDDLE:\n        if (scope.enableZoom === false) return;\n        handleMouseDownDolly(event);\n        state = STATE.DOLLY;\n        break;\n\n      case scope.mouseButtons.RIGHT:\n        if (scope.enablePan === false) return;\n        handleMouseDownPan(event);\n        state = STATE.PAN;\n        break;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener('mousemove', onMouseMove, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    event.stopPropagation();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (event.touches.length) {\n      case 1:\n        // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        handleTouchStartRotate(event);\n        state = STATE.TOUCH_ROTATE;\n        break;\n\n      case 2:\n        // two-fingered touch: dolly-pan\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchStartDollyPan(event);\n        state = STATE.TOUCH_DOLLY_PAN;\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case 1:\n        // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?\n\n        handleTouchMoveRotate(event);\n        break;\n\n      case 2:\n        // two-fingered touch: dolly-pan\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        if (state !== STATE.TOUCH_DOLLY_PAN) return; // is this needed?\n\n        handleTouchMoveDollyPan(event);\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  } //\n\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\n  window.addEventListener('keydown', onKeyDown, false); // force an update at start\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\nObject.defineProperties(OrbitControls.prototype, {\n  center: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\n      return this.target;\n    }\n  },\n  // backward compatibility\n  noZoom: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      return !this.enableZoom;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      this.enableZoom = !value;\n    }\n  },\n  noRotate: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      return !this.enableRotate;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      this.enableRotate = !value;\n    }\n  },\n  noPan: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      return !this.enablePan;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      this.enablePan = !value;\n    }\n  },\n  noKeys: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      return !this.enableKeys;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      this.enableKeys = !value;\n    }\n  },\n  staticMoving: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      return !this.enableDamping;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      this.enableDamping = !value;\n    }\n  },\n  dynamicDampingFactor: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      return this.dampingFactor;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      this.dampingFactor = value;\n    }\n  }\n});\nexport { OrbitControls };","import _classCallCheck from \"D:\\\\Web\\\\discoverthreejs-django\\\\hugo\\\\resources\\\\examples\\\\2-build-tools-frameworks\\\\8-threejs-and-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Web\\\\discoverthreejs-django\\\\hugo\\\\resources\\\\examples\\\\2-build-tools-frameworks\\\\8-threejs-and-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { Clock, PerspectiveCamera, Scene, WebGLRenderer } from 'three'; // should be possible to use from NPM as of R102\n\nimport { OrbitControls } from './three/controls/OrbitControls.module.js';\n\nvar THREE_APP =\n/*#__PURE__*/\nfunction () {\n  function THREE_APP(container) {\n    _classCallCheck(this, THREE_APP);\n\n    container = container || '#container'; // default ID if none provided\n\n    this.container = document.querySelector(container);\n\n    if (!this.container) {\n      console.error(\"Couldn't find the container element: \".concat(container));\n      return;\n    }\n\n    this.scene = new Scene();\n    this.clock = new Clock();\n    this.running = false; // make sure to set these to the values you want before calling init\n    // since they can't be changed without creating a new WebGLRenderer\n\n    this.alpha = false;\n    this.antialias = true;\n    this.powerPreference = 'high-performance';\n    this.stencil = false; // override the three.js default of 2.0\n\n    this.gammaFactor = 2.2; // should nearly always be true, unless using postprocessing\n\n    this.gammaOutput = true; // should always be true when using a physically based workflow\n\n    this.physicallyCorrectLights = true; // this also needs to be set before calling init()\n\n    this.autoResize = true; // set this to a value less than 3 to increase performance on low power mobile devices with high pixel ratio\n\n    this.maxPixelRatio = Infinity; // whether or not to call the controls.update function once per frame\n\n    this.controlsAutoUpdate = true;\n    this.onUpdate = null;\n    this.onResize = null;\n    this.showStats = false;\n  }\n\n  _createClass(THREE_APP, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      this.initCamera();\n      this.initControls();\n      this.initRenderer();\n      this.initStats();\n      if (this.autoResize) window.addEventListener('resize', function () {\n        return _this.onWindowResize();\n      });\n    }\n  }, {\n    key: \"initCamera\",\n    value: function initCamera() {\n      if (!this.camera) this.camera = new PerspectiveCamera(35, this.container.clientWidth / this.container.clientHeight, 1, 1000);\n    }\n  }, {\n    key: \"initControls\",\n    value: function initControls() {\n      // allow custom controls to be set up\n      if (this.controls) return; // if the controls script was loaded, we'll set them up\n\n      if (typeof OrbitControls === 'function') this.controls = new OrbitControls(this.camera, this.container); // otherwise we'll skip them\n      else return; // gives the controls a feeling of \"weight\"\n\n      this.controls.enableDamping = true;\n    }\n  }, {\n    key: \"initRenderer\",\n    value: function initRenderer() {\n      // allow custom renderer to be set up\n      if (this.renderer) return;\n      this.renderer = new WebGLRenderer({\n        powerPreference: this.powerPreference,\n        alpha: this.alpha,\n        antialias: this.antialias,\n        stencil: this.stencil\n      });\n      this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n      this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, this.maxPixelRatio));\n      this.renderer.gammaFactor = this.gammaFactor; // note that changing this after rendering the scene won't work\n\n      this.renderer.gammaOutput = this.gammaOutput;\n      this.renderer.physicallyCorrectLights = this.physicallyCorrectLights; // to avoid page pulling\n\n      this.renderer.domElement.addEventListener('touchstart', function (e) {\n        return e.preventDefault();\n      });\n      this.container.appendChild(this.renderer.domElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.renderer.render(this.scene, this.camera);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var delta = this.clock.getDelta();\n      if (this.controlsAutoUpdate && this.controls && this.controls.update) this.controls.update(delta); // step through the scene and call custom onUpdate functions on any object\n      // for which we have defined them\n\n      this.scene.traverse(function (child) {\n        if (child.userData.onUpdate) child.userData.onUpdate(delta);\n      });\n      if (this.onUpdate) this.onUpdate(delta);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      // clear previous delta to prevent large delta values when\n      // starting and stopping the app\n      this.clock.getDelta();\n      this.renderer.setAnimationLoop(function () {\n        if (_this2.stats) _this2.stats.begin();\n\n        _this2.update();\n\n        _this2.render();\n\n        if (_this2.stats) _this2.stats.end();\n      });\n      this.running = true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.renderer.setAnimationLoop(null);\n      this.running = false;\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      if (!this.autoResize) return;\n      this.camera.aspect = this.container.clientWidth / this.container.clientHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n      this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, this.maxPixelRatio)); // render an extra frame to prevent jank\n\n      this.renderer.render(this.scene, this.camera);\n      if (this.onResize) this.onResize();\n    } // if stats.js has been loaded, create a stats overlay\n\n  }, {\n    key: \"initStats\",\n    value: function initStats() {\n      if (!this.showStats || !Stats) return;\n      this.stats = new Stats();\n      this.container.appendChild(this.stats.dom);\n    }\n  }]);\n\n  return THREE_APP;\n}();\n\nexport { THREE_APP as default };","import _regeneratorRuntime from \"D:\\\\Web\\\\discoverthreejs-django\\\\hugo\\\\resources\\\\examples\\\\2-build-tools-frameworks\\\\8-threejs-and-react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Web\\\\discoverthreejs-django\\\\hugo\\\\resources\\\\examples\\\\2-build-tools-frameworks\\\\8-threejs-and-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n// Create an async version of a three.js loader.\n// accepts and onProgress callback as an optional second argument\nexport default (function (loader) {\n  var onProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  return {\n    load: function () {\n      var _load = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  loader.load( // url to the file we want to load\n                  url, // call resolve with the result of the loader (just return the loaded object)\n                  resolve, // onProgress is an empty function by default\n                  function (e) {\n                    return onProgress(e);\n                  }, // simple onError function\n                  function (e) {\n                    reject(new Error(\"Error loading file \".concat(url)));\n                    console.error(e);\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load(_x) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  };\n});","/**\r\n * @author Rich Tibbett / https://github.com/richtr\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Tony Parisi / http://www.tonyparisi.com/\r\n * @author Takahiro / https://github.com/takahirox\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\nimport { AddEquation, AlwaysDepth, AnimationClip, AnimationUtils, BackSide, Bone, BufferAttribute, BufferGeometry, Camera, ClampToEdgeWrapping, Color, DefaultLoadingManager, DirectionalLight, DoubleSide, DstAlphaFactor, DstColorFactor, EqualDepth, FileLoader, FrontSide, GreaterEqualDepth, Group, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, LessDepth, LessEqualDepth, Line, LineBasicMaterial, LineLoop, LineSegments, LinearFilter, LinearMipMapLinearFilter, LinearMipMapNearestFilter, Loader, LoaderUtils, Material, Math, Matrix3, Matrix4, Mesh, MeshBasicMaterial, MeshStandardMaterial, MirroredRepeatWrapping, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverDepth, NotEqualDepth, NumberKeyframeTrack, Object3D, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PerspectiveCamera, PointLight, Points, PointsMaterial, PropertyBinding, QuaternionKeyframeTrack, RGBAFormat, RGBFormat, RepeatWrapping, ReverseSubtractEquation, Scene, ShaderLib, ShaderMaterial, Skeleton, SkinnedMesh, SpotLight, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, SubtractEquation, Texture, TextureLoader, TriangleFanDrawMode, TriangleStripDrawMode, UniformsUtils, Vector2, Vector3, Vector4, VectorKeyframeTrack, VertexColors, ZeroFactor, sRGBEncoding } from 'three';\n\nvar GLTFLoader = function () {\n  function GLTFLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.dracoLoader = null;\n  }\n\n  GLTFLoader.prototype = {\n    constructor: GLTFLoader,\n    crossOrigin: 'anonymous',\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var resourcePath;\n\n      if (this.resourcePath !== undefined) {\n        resourcePath = this.resourcePath;\n      } else if (this.path !== undefined) {\n        resourcePath = this.path;\n      } else {\n        resourcePath = LoaderUtils.extractUrlBase(url);\n      } // Tells the LoadingManager to track an extra item, which resolves after\n      // the model is fully loaded. This means the count of items loaded will\n      // be incorrect, but ensures manager.onLoad() does not fire early.\n\n\n      scope.manager.itemStart(url);\n\n      var _onError = function _onError(e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      };\n\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (data) {\n        try {\n          scope.parse(data, resourcePath, function (gltf) {\n            onLoad(gltf);\n            scope.manager.itemEnd(url);\n          }, _onError);\n        } catch (e) {\n          _onError(e);\n        }\n      }, onProgress, _onError);\n    },\n    setCrossOrigin: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    },\n    setResourcePath: function setResourcePath(value) {\n      this.resourcePath = value;\n      return this;\n    },\n    setDRACOLoader: function setDRACOLoader(dracoLoader) {\n      this.dracoLoader = dracoLoader;\n      return this;\n    },\n    parse: function parse(data, path, onLoad, onError) {\n      var content;\n      var extensions = {};\n\n      if (typeof data === 'string') {\n        content = data;\n      } else {\n        var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n        if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n          try {\n            extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n          } catch (error) {\n            if (onError) onError(error);\n            return;\n          }\n\n          content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n        } else {\n          content = LoaderUtils.decodeText(new Uint8Array(data));\n        }\n      }\n\n      var json = JSON.parse(content);\n\n      if (json.asset === undefined || json.asset.version[0] < 2) {\n        if (onError) onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.'));\n        return;\n      }\n\n      if (json.extensionsUsed) {\n        for (var i = 0; i < json.extensionsUsed.length; ++i) {\n          var extensionName = json.extensionsUsed[i];\n          var extensionsRequired = json.extensionsRequired || [];\n\n          switch (extensionName) {\n            case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n              extensions[extensionName] = new GLTFLightsExtension(json);\n              break;\n\n            case EXTENSIONS.KHR_MATERIALS_UNLIT:\n              extensions[extensionName] = new GLTFMaterialsUnlitExtension(json);\n              break;\n\n            case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n              extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension(json);\n              break;\n\n            case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n              extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n              break;\n\n            case EXTENSIONS.MSFT_TEXTURE_DDS:\n              extensions[EXTENSIONS.MSFT_TEXTURE_DDS] = new GLTFTextureDDSExtension(json);\n              break;\n\n            case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n              extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] = new GLTFTextureTransformExtension(json);\n              break;\n\n            default:\n              if (extensionsRequired.indexOf(extensionName) >= 0) {\n                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n              }\n\n          }\n        }\n      }\n\n      var parser = new GLTFParser(json, extensions, {\n        path: path || this.resourcePath || '',\n        crossOrigin: this.crossOrigin,\n        manager: this.manager\n      });\n      parser.parse(function (scene, scenes, cameras, animations, json) {\n        var glTF = {\n          scene: scene,\n          scenes: scenes,\n          cameras: cameras,\n          animations: animations,\n          asset: json.asset,\n          parser: parser,\n          userData: {}\n        };\n        addUnknownExtensionsToUserData(extensions, glTF, json);\n        onLoad(glTF);\n      }, onError);\n    }\n  };\n  /* GLTFREGISTRY */\n\n  function GLTFRegistry() {\n    var objects = {};\n    return {\n      get: function get(key) {\n        return objects[key];\n      },\n      add: function add(key, object) {\n        objects[key] = object;\n      },\n      remove: function remove(key) {\n        delete objects[key];\n      },\n      removeAll: function removeAll() {\n        objects = {};\n      }\n    };\n  }\n  /*********************************/\n\n  /********** EXTENSIONS ***********/\n\n  /*********************************/\n\n\n  var EXTENSIONS = {\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\n    KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n    KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n    KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n    KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n    MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n  };\n  /**\r\n   * DDS Texture Extension\r\n   *\r\n   * Specification:\r\n   * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\r\n   *\r\n   */\n\n  function GLTFTextureDDSExtension() {\n    if (!THREE.DDSLoader) {\n      throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader');\n    }\n\n    this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n    this.ddsLoader = new THREE.DDSLoader();\n  }\n  /**\r\n   * Lights Extension\r\n   *\r\n   * Specification: PENDING\r\n   */\n\n\n  function GLTFLightsExtension(json) {\n    this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n    var extension = json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] || {};\n    this.lightDefs = extension.lights || [];\n  }\n\n  GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n    var lightDef = this.lightDefs[lightIndex];\n    var lightNode;\n    var color = new Color(0xffffff);\n    if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n    var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n    switch (lightDef.type) {\n      case 'directional':\n        lightNode = new DirectionalLight(color);\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n\n      case 'point':\n        lightNode = new PointLight(color);\n        lightNode.distance = range;\n        break;\n\n      case 'spot':\n        lightNode = new SpotLight(color);\n        lightNode.distance = range; // Handle spotlight properties.\n\n        lightDef.spot = lightDef.spot || {};\n        lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n        lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n        lightNode.angle = lightDef.spot.outerConeAngle;\n        lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n\n      default:\n        throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n    }\n\n    lightNode.decay = 2;\n    if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n    lightNode.name = lightDef.name || 'light_' + lightIndex;\n    return Promise.resolve(lightNode);\n  };\n  /**\r\n   * Unlit Materials Extension (pending)\r\n   *\r\n   * PR: https://github.com/KhronosGroup/glTF/pull/1163\r\n   */\n\n\n  function GLTFMaterialsUnlitExtension(json) {\n    this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n  }\n\n  GLTFMaterialsUnlitExtension.prototype.getMaterialType = function (material) {\n    return MeshBasicMaterial;\n  };\n\n  GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, material, parser) {\n    var pending = [];\n    materialParams.color = new Color(1.0, 1.0, 1.0);\n    materialParams.opacity = 1.0;\n    var metallicRoughness = material.pbrMetallicRoughness;\n\n    if (metallicRoughness) {\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n    }\n\n    return Promise.all(pending);\n  };\n  /* BINARY EXTENSION */\n\n\n  var BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n  var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n  var BINARY_EXTENSION_HEADER_LENGTH = 12;\n  var BINARY_EXTENSION_CHUNK_TYPES = {\n    JSON: 0x4E4F534A,\n    BIN: 0x004E4942\n  };\n\n  function GLTFBinaryExtension(data) {\n    this.name = EXTENSIONS.KHR_BINARY_GLTF;\n    this.content = null;\n    this.body = null;\n    var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n    this.header = {\n      magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n      version: headerView.getUint32(4, true),\n      length: headerView.getUint32(8, true)\n    };\n\n    if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n      throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n    } else if (this.header.version < 2.0) {\n      throw new Error('THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.');\n    }\n\n    var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n    var chunkIndex = 0;\n\n    while (chunkIndex < chunkView.byteLength) {\n      var chunkLength = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n      var chunkType = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n\n      if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n        var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n        this.content = LoaderUtils.decodeText(contentArray);\n      } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n        var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n        this.body = data.slice(byteOffset, byteOffset + chunkLength);\n      } // Clients must ignore chunks with unknown types.\n\n\n      chunkIndex += chunkLength;\n    }\n\n    if (this.content === null) {\n      throw new Error('THREE.GLTFLoader: JSON content not found.');\n    }\n  }\n  /**\r\n   * DRACO Mesh Compression Extension\r\n   *\r\n   * Specification: https://github.com/KhronosGroup/glTF/pull/874\r\n   */\n\n\n  function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n    if (!dracoLoader) {\n      throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n    }\n\n    this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n    this.json = json;\n    this.dracoLoader = dracoLoader;\n    THREE.DRACOLoader.getDecoderModule();\n  }\n\n  GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n    var json = this.json;\n    var dracoLoader = this.dracoLoader;\n    var bufferViewIndex = primitive.extensions[this.name].bufferView;\n    var gltfAttributeMap = primitive.extensions[this.name].attributes;\n    var threeAttributeMap = {};\n    var attributeNormalizedMap = {};\n    var attributeTypeMap = {};\n\n    for (var attributeName in gltfAttributeMap) {\n      if (!(attributeName in ATTRIBUTES)) continue;\n      threeAttributeMap[ATTRIBUTES[attributeName]] = gltfAttributeMap[attributeName];\n    }\n\n    for (attributeName in primitive.attributes) {\n      if (ATTRIBUTES[attributeName] !== undefined && gltfAttributeMap[attributeName] !== undefined) {\n        var accessorDef = json.accessors[primitive.attributes[attributeName]];\n        var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n        attributeTypeMap[ATTRIBUTES[attributeName]] = componentType;\n        attributeNormalizedMap[ATTRIBUTES[attributeName]] = accessorDef.normalized === true;\n      }\n    }\n\n    return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n      return new Promise(function (resolve) {\n        dracoLoader.decodeDracoFile(bufferView, function (geometry) {\n          for (var attributeName in geometry.attributes) {\n            var attribute = geometry.attributes[attributeName];\n            var normalized = attributeNormalizedMap[attributeName];\n            if (normalized !== undefined) attribute.normalized = normalized;\n          }\n\n          resolve(geometry);\n        }, threeAttributeMap, attributeTypeMap);\n      });\n    });\n  };\n  /**\r\n   * Texture Transform Extension\r\n   *\r\n   * Specification:\r\n   */\n\n\n  function GLTFTextureTransformExtension(json) {\n    this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n  }\n\n  GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n    texture = texture.clone();\n\n    if (transform.offset !== undefined) {\n      texture.offset.fromArray(transform.offset);\n    }\n\n    if (transform.rotation !== undefined) {\n      texture.rotation = transform.rotation;\n    }\n\n    if (transform.scale !== undefined) {\n      texture.repeat.fromArray(transform.scale);\n    }\n\n    if (transform.texCoord !== undefined) {\n      console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n    }\n\n    texture.needsUpdate = true;\n    return texture;\n  };\n  /**\r\n   * Specular-Glossiness Extension\r\n   *\r\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\r\n   */\n\n\n  function GLTFMaterialsPbrSpecularGlossinessExtension() {\n    return {\n      name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n      specularGlossinessParams: ['color', 'map', 'lightMap', 'lightMapIntensity', 'aoMap', 'aoMapIntensity', 'emissive', 'emissiveIntensity', 'emissiveMap', 'bumpMap', 'bumpScale', 'normalMap', 'displacementMap', 'displacementScale', 'displacementBias', 'specularMap', 'specular', 'glossinessMap', 'glossiness', 'alphaMap', 'envMap', 'envMapIntensity', 'refractionRatio'],\n      getMaterialType: function getMaterialType() {\n        return ShaderMaterial;\n      },\n      extendParams: function extendParams(params, material, parser) {\n        var pbrSpecularGlossiness = material.extensions[this.name];\n        var shader = ShaderLib['standard'];\n        var uniforms = UniformsUtils.clone(shader.uniforms);\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join('\\n');\n        var glossinessMapParsFragmentChunk = ['#ifdef USE_GLOSSINESSMAP', '\tuniform sampler2D glossinessMap;', '#endif'].join('\\n');\n        var specularMapFragmentChunk = ['vec3 specularFactor = specular;', '#ifdef USE_SPECULARMAP', '\tvec4 texelSpecular = texture2D( specularMap, vUv );', '\ttexelSpecular = sRGBToLinear( texelSpecular );', '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tspecularFactor *= texelSpecular.rgb;', '#endif'].join('\\n');\n        var glossinessMapFragmentChunk = ['float glossinessFactor = glossiness;', '#ifdef USE_GLOSSINESSMAP', '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );', '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tglossinessFactor *= texelGlossiness.a;', '#endif'].join('\\n');\n        var lightPhysicalFragmentChunk = ['PhysicalMaterial material;', 'material.diffuseColor = diffuseColor.rgb;', 'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );', 'material.specularColor = specularFactor.rgb;'].join('\\n');\n        var fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;').replace('uniform float metalness;', 'uniform float glossiness;').replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk).replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk).replace('#include <roughnessmap_fragment>', specularMapFragmentChunk).replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk).replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\n        delete uniforms.roughness;\n        delete uniforms.metalness;\n        delete uniforms.roughnessMap;\n        delete uniforms.metalnessMap;\n        uniforms.specular = {\n          value: new Color().setHex(0x111111)\n        };\n        uniforms.glossiness = {\n          value: 0.5\n        };\n        uniforms.specularMap = {\n          value: null\n        };\n        uniforms.glossinessMap = {\n          value: null\n        };\n        params.vertexShader = shader.vertexShader;\n        params.fragmentShader = fragmentShader;\n        params.uniforms = uniforms;\n        params.defines = {\n          'STANDARD': ''\n        };\n        params.color = new Color(1.0, 1.0, 1.0);\n        params.opacity = 1.0;\n        var pending = [];\n\n        if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n          var array = pbrSpecularGlossiness.diffuseFactor;\n          params.color.fromArray(array);\n          params.opacity = array[3];\n        }\n\n        if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n          pending.push(parser.assignTexture(params, 'map', pbrSpecularGlossiness.diffuseTexture));\n        }\n\n        params.emissive = new Color(0.0, 0.0, 0.0);\n        params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n        params.specular = new Color(1.0, 1.0, 1.0);\n\n        if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n          params.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n        }\n\n        if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n          var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n          pending.push(parser.assignTexture(params, 'glossinessMap', specGlossMapDef));\n          pending.push(parser.assignTexture(params, 'specularMap', specGlossMapDef));\n        }\n\n        return Promise.all(pending);\n      },\n      createMaterial: function createMaterial(params) {\n        // setup material properties based on MeshStandardMaterial for Specular-Glossiness\n        var material = new ShaderMaterial({\n          defines: params.defines,\n          vertexShader: params.vertexShader,\n          fragmentShader: params.fragmentShader,\n          uniforms: params.uniforms,\n          fog: true,\n          lights: true,\n          opacity: params.opacity,\n          transparent: params.transparent\n        });\n        material.isGLTFSpecularGlossinessMaterial = true;\n        material.color = params.color;\n        material.map = params.map === undefined ? null : params.map;\n        material.lightMap = null;\n        material.lightMapIntensity = 1.0;\n        material.aoMap = params.aoMap === undefined ? null : params.aoMap;\n        material.aoMapIntensity = 1.0;\n        material.emissive = params.emissive;\n        material.emissiveIntensity = 1.0;\n        material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n        material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n        material.bumpScale = 1;\n        material.normalMap = params.normalMap === undefined ? null : params.normalMap;\n        if (params.normalScale) material.normalScale = params.normalScale;\n        material.displacementMap = null;\n        material.displacementScale = 1;\n        material.displacementBias = 0;\n        material.specularMap = params.specularMap === undefined ? null : params.specularMap;\n        material.specular = params.specular;\n        material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n        material.glossiness = params.glossiness;\n        material.alphaMap = null;\n        material.envMap = params.envMap === undefined ? null : params.envMap;\n        material.envMapIntensity = 1.0;\n        material.refractionRatio = 0.98;\n        material.extensions.derivatives = true;\n        return material;\n      },\n\n      /**\r\n       * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\r\n       * copy only properties it knows about or inherits, and misses many properties that would\r\n       * normally be defined by MeshStandardMaterial.\r\n       *\r\n       * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\r\n       * loading a glTF model, but cloning later (e.g. by the user) would require these changes\r\n       * AND also updating `.onBeforeRender` on the parent mesh.\r\n       *\r\n       * @param  {ShaderMaterial} source\r\n       * @return {ShaderMaterial}\r\n       */\n      cloneMaterial: function cloneMaterial(source) {\n        var target = source.clone();\n        target.isGLTFSpecularGlossinessMaterial = true;\n        var params = this.specularGlossinessParams;\n\n        for (var i = 0, il = params.length; i < il; i++) {\n          target[params[i]] = source[params[i]];\n        }\n\n        return target;\n      },\n      // Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n      refreshUniforms: function refreshUniforms(renderer, scene, camera, geometry, material, group) {\n        if (material.isGLTFSpecularGlossinessMaterial !== true) {\n          return;\n        }\n\n        var uniforms = material.uniforms;\n        var defines = material.defines;\n        uniforms.opacity.value = material.opacity;\n        uniforms.diffuse.value.copy(material.color);\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n        uniforms.map.value = material.map;\n        uniforms.specularMap.value = material.specularMap;\n        uniforms.alphaMap.value = material.alphaMap;\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity; // uv repeat and offset setting priorities\n        // 1. color map\n        // 2. specular map\n        // 3. normal map\n        // 4. bump map\n        // 5. alpha map\n        // 6. emissive map\n\n        var uvScaleMap;\n\n        if (material.map) {\n          uvScaleMap = material.map;\n        } else if (material.specularMap) {\n          uvScaleMap = material.specularMap;\n        } else if (material.displacementMap) {\n          uvScaleMap = material.displacementMap;\n        } else if (material.normalMap) {\n          uvScaleMap = material.normalMap;\n        } else if (material.bumpMap) {\n          uvScaleMap = material.bumpMap;\n        } else if (material.glossinessMap) {\n          uvScaleMap = material.glossinessMap;\n        } else if (material.alphaMap) {\n          uvScaleMap = material.alphaMap;\n        } else if (material.emissiveMap) {\n          uvScaleMap = material.emissiveMap;\n        }\n\n        if (uvScaleMap !== undefined) {\n          // backwards compatibility\n          if (uvScaleMap.isWebGLRenderTarget) {\n            uvScaleMap = uvScaleMap.texture;\n          }\n\n          if (uvScaleMap.matrixAutoUpdate === true) {\n            uvScaleMap.updateMatrix();\n          }\n\n          uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n        }\n\n        if (material.envMap) {\n          uniforms.envMap.value = material.envMap;\n          uniforms.envMapIntensity.value = material.envMapIntensity; // don't flip CubeTexture envMaps, flip everything else:\n          //  WebGLRenderTargetCube will be flipped for backwards compatibility\n          //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n          // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n          uniforms.flipEnvMap.value = material.envMap.isCubeTexture ? -1 : 1;\n          uniforms.reflectivity.value = material.reflectivity;\n          uniforms.refractionRatio.value = material.refractionRatio;\n          uniforms.maxMipLevel.value = renderer.properties.get(material.envMap).__maxMipLevel;\n        }\n\n        uniforms.specular.value.copy(material.specular);\n        uniforms.glossiness.value = material.glossiness;\n        uniforms.glossinessMap.value = material.glossinessMap;\n        uniforms.emissiveMap.value = material.emissiveMap;\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n\n        if (uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined) {\n          defines.USE_GLOSSINESSMAP = ''; // set USE_ROUGHNESSMAP to enable vUv\n\n          defines.USE_ROUGHNESSMAP = '';\n        }\n\n        if (uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined) {\n          delete defines.USE_GLOSSINESSMAP;\n          delete defines.USE_ROUGHNESSMAP;\n        }\n      }\n    };\n  }\n  /*********************************/\n\n  /********** INTERPOLATION ********/\n\n  /*********************************/\n  // Spline Interpolation\n  // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\n\n  function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n  GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n  GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n    // Copies a sample value to the result buffer. See description of glTF\n    // CUBICSPLINE values layout in interpolate_() function below.\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        valueSize = this.valueSize,\n        offset = index * valueSize * 3 + valueSize;\n\n    for (var i = 0; i !== valueSize; i++) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  };\n\n  GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n  GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n  GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n    var result = this.resultBuffer;\n    var values = this.sampleValues;\n    var stride = this.valueSize;\n    var stride2 = stride * 2;\n    var stride3 = stride * 3;\n    var td = t1 - t0;\n    var p = (t - t0) / td;\n    var pp = p * p;\n    var ppp = pp * p;\n    var offset1 = i1 * stride3;\n    var offset0 = offset1 - stride3;\n    var s2 = -2 * ppp + 3 * pp;\n    var s3 = ppp - pp;\n    var s0 = 1 - s2;\n    var s1 = s3 - pp + p; // Layout of keyframe output values for CUBICSPLINE animations:\n    //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\n    for (var i = 0; i !== stride; i++) {\n      var p0 = values[offset0 + i + stride]; // splineVertex_k\n\n      var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n\n      var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n\n      var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n      result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n    }\n\n    return result;\n  };\n  /*********************************/\n\n  /********** INTERNALS ************/\n\n  /*********************************/\n\n  /* CONSTANTS */\n\n\n  var WEBGL_CONSTANTS = {\n    FLOAT: 5126,\n    //FLOAT_MAT2: 35674,\n    FLOAT_MAT3: 35675,\n    FLOAT_MAT4: 35676,\n    FLOAT_VEC2: 35664,\n    FLOAT_VEC3: 35665,\n    FLOAT_VEC4: 35666,\n    LINEAR: 9729,\n    REPEAT: 10497,\n    SAMPLER_2D: 35678,\n    POINTS: 0,\n    LINES: 1,\n    LINE_LOOP: 2,\n    LINE_STRIP: 3,\n    TRIANGLES: 4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN: 6,\n    UNSIGNED_BYTE: 5121,\n    UNSIGNED_SHORT: 5123\n  };\n  var WEBGL_TYPE = {\n    5126: Number,\n    //35674: THREE.Matrix2,\n    35675: Matrix3,\n    35676: Matrix4,\n    35664: Vector2,\n    35665: Vector3,\n    35666: Vector4,\n    35678: Texture\n  };\n  var WEBGL_COMPONENT_TYPES = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n  };\n  var WEBGL_FILTERS = {\n    9728: NearestFilter,\n    9729: LinearFilter,\n    9984: NearestMipMapNearestFilter,\n    9985: LinearMipMapNearestFilter,\n    9986: NearestMipMapLinearFilter,\n    9987: LinearMipMapLinearFilter\n  };\n  var WEBGL_WRAPPINGS = {\n    33071: ClampToEdgeWrapping,\n    33648: MirroredRepeatWrapping,\n    10497: RepeatWrapping\n  };\n  var WEBGL_SIDES = {\n    1028: BackSide,\n    // Culling front\n    1029: FrontSide // Culling back\n    //1032: THREE.NoSide   // Culling front and back, what to do?\n\n  };\n  var WEBGL_DEPTH_FUNCS = {\n    512: NeverDepth,\n    513: LessDepth,\n    514: EqualDepth,\n    515: LessEqualDepth,\n    516: GreaterEqualDepth,\n    517: NotEqualDepth,\n    518: GreaterEqualDepth,\n    519: AlwaysDepth\n  };\n  var WEBGL_BLEND_EQUATIONS = {\n    32774: AddEquation,\n    32778: SubtractEquation,\n    32779: ReverseSubtractEquation\n  };\n  var WEBGL_BLEND_FUNCS = {\n    0: ZeroFactor,\n    1: OneFactor,\n    768: SrcColorFactor,\n    769: OneMinusSrcColorFactor,\n    770: SrcAlphaFactor,\n    771: OneMinusSrcAlphaFactor,\n    772: DstAlphaFactor,\n    773: OneMinusDstAlphaFactor,\n    774: DstColorFactor,\n    775: OneMinusDstColorFactor,\n    776: SrcAlphaSaturateFactor // The followings are not supported by Three.js yet\n    //32769: CONSTANT_COLOR,\n    //32770: ONE_MINUS_CONSTANT_COLOR,\n    //32771: CONSTANT_ALPHA,\n    //32772: ONE_MINUS_CONSTANT_COLOR\n\n  };\n  var WEBGL_TYPE_SIZES = {\n    'SCALAR': 1,\n    'VEC2': 2,\n    'VEC3': 3,\n    'VEC4': 4,\n    'MAT2': 4,\n    'MAT3': 9,\n    'MAT4': 16\n  };\n  var ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex'\n  };\n  var PATH_PROPERTIES = {\n    scale: 'scale',\n    translation: 'position',\n    rotation: 'quaternion',\n    weights: 'morphTargetInfluences'\n  };\n  var INTERPOLATION = {\n    CUBICSPLINE: InterpolateSmooth,\n    // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\n    // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\n    // using InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\n    // See KeyframeTrack.optimize() for the detail.\n    LINEAR: InterpolateLinear,\n    STEP: InterpolateDiscrete\n  };\n  var STATES_ENABLES = {\n    2884: 'CULL_FACE',\n    2929: 'DEPTH_TEST',\n    3042: 'BLEND',\n    3089: 'SCISSOR_TEST',\n    32823: 'POLYGON_OFFSET_FILL',\n    32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n  };\n  var ALPHA_MODES = {\n    OPAQUE: 'OPAQUE',\n    MASK: 'MASK',\n    BLEND: 'BLEND'\n  };\n  var MIME_TYPE_FORMATS = {\n    'image/png': RGBAFormat,\n    'image/jpeg': RGBFormat\n  };\n  /* UTILITY FUNCTIONS */\n\n  function resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return ''; // Absolute URL http://,https://,//\n\n    if (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n    if (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n    if (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n    return path + url;\n  }\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n   */\n\n\n  function createDefaultMaterial() {\n    return new MeshStandardMaterial({\n      color: 0xFFFFFF,\n      emissive: 0x000000,\n      metalness: 1,\n      roughness: 1,\n      transparent: false,\n      depthTest: true,\n      side: FrontSide\n    });\n  }\n\n  function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n    // Add unknown glTF extensions to an object's userData.\n    for (var name in objectDef.extensions) {\n      if (knownExtensions[name] === undefined) {\n        object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n        object.userData.gltfExtensions[name] = objectDef.extensions[name];\n      }\n    }\n  }\n  /**\r\n   * @param {Object3D|Material|BufferGeometry} object\r\n   * @param {GLTF.definition} gltfDef\r\n   */\n\n\n  function assignExtrasToUserData(object, gltfDef) {\n    if (gltfDef.extras !== undefined) {\n      if (typeof gltfDef.extras === 'object') {\n        object.userData = gltfDef.extras;\n      } else {\n        console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n      }\n    }\n  }\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n   *\r\n   * @param {BufferGeometry} geometry\r\n   * @param {Array<GLTF.Target>} targets\r\n   * @param {GLTFParser} parser\r\n   * @return {Promise<BufferGeometry>}\r\n   */\n\n\n  function addMorphTargets(geometry, targets, parser) {\n    var hasMorphPosition = false;\n    var hasMorphNormal = false;\n\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n      if (target.POSITION !== undefined) hasMorphPosition = true;\n      if (target.NORMAL !== undefined) hasMorphNormal = true;\n      if (hasMorphPosition && hasMorphNormal) break;\n    }\n\n    if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n    var pendingPositionAccessors = [];\n    var pendingNormalAccessors = [];\n\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n\n      if (hasMorphPosition) {\n        // TODO: Error-prone use of a callback inside a loop.\n        var accessor = target.POSITION !== undefined ? parser.getDependency('accessor', target.POSITION).then(function (accessor) {\n          // Cloning not to pollute original accessor below\n          return cloneBufferAttribute(accessor);\n        }) : geometry.attributes.position;\n        pendingPositionAccessors.push(accessor);\n      }\n\n      if (hasMorphNormal) {\n        // TODO: Error-prone use of a callback inside a loop.\n        var accessor = target.NORMAL !== undefined ? parser.getDependency('accessor', target.NORMAL).then(function (accessor) {\n          return cloneBufferAttribute(accessor);\n        }) : geometry.attributes.normal;\n        pendingNormalAccessors.push(accessor);\n      }\n    }\n\n    return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (accessors) {\n      var morphPositions = accessors[0];\n      var morphNormals = accessors[1];\n\n      for (var i = 0, il = targets.length; i < il; i++) {\n        var target = targets[i];\n        var attributeName = 'morphTarget' + i;\n\n        if (hasMorphPosition) {\n          // Three.js morph position is absolute value. The formula is\n          //   basePosition\n          //     + weight0 * ( morphPosition0 - basePosition )\n          //     + weight1 * ( morphPosition1 - basePosition )\n          //     ...\n          // while the glTF one is relative\n          //   basePosition\n          //     + weight0 * glTFmorphPosition0\n          //     + weight1 * glTFmorphPosition1\n          //     ...\n          // then we need to convert from relative to absolute here.\n          if (target.POSITION !== undefined) {\n            var positionAttribute = morphPositions[i];\n            positionAttribute.name = attributeName;\n            var position = geometry.attributes.position;\n\n            for (var j = 0, jl = positionAttribute.count; j < jl; j++) {\n              positionAttribute.setXYZ(j, positionAttribute.getX(j) + position.getX(j), positionAttribute.getY(j) + position.getY(j), positionAttribute.getZ(j) + position.getZ(j));\n            }\n          }\n        }\n\n        if (hasMorphNormal) {\n          // see target.POSITION's comment\n          if (target.NORMAL !== undefined) {\n            var normalAttribute = morphNormals[i];\n            normalAttribute.name = attributeName;\n            var normal = geometry.attributes.normal;\n\n            for (var j = 0, jl = normalAttribute.count; j < jl; j++) {\n              normalAttribute.setXYZ(j, normalAttribute.getX(j) + normal.getX(j), normalAttribute.getY(j) + normal.getY(j), normalAttribute.getZ(j) + normal.getZ(j));\n            }\n          }\n        }\n      }\n\n      if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n      if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n      return geometry;\n    });\n  }\n  /**\r\n   * @param {Mesh} mesh\r\n   * @param {GLTF.Mesh} meshDef\r\n   */\n\n\n  function updateMorphTargets(mesh, meshDef) {\n    mesh.updateMorphTargets();\n\n    if (meshDef.weights !== undefined) {\n      for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n        mesh.morphTargetInfluences[i] = meshDef.weights[i];\n      }\n    } // .extras has user-defined data, so check that .extras.targetNames is an array.\n\n\n    if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n      var targetNames = meshDef.extras.targetNames;\n\n      if (mesh.morphTargetInfluences.length === targetNames.length) {\n        mesh.morphTargetDictionary = {};\n\n        for (var i = 0, il = targetNames.length; i < il; i++) {\n          mesh.morphTargetDictionary[targetNames[i]] = i;\n        }\n      } else {\n        console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n      }\n    }\n  }\n\n  function isPrimitiveEqual(a, b) {\n    var dracoExtA = a.extensions ? a.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION] : undefined;\n    var dracoExtB = b.extensions ? b.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION] : undefined;\n\n    if (dracoExtA && dracoExtB) {\n      if (dracoExtA.bufferView !== dracoExtB.bufferView) return false;\n      return isObjectEqual(dracoExtA.attributes, dracoExtB.attributes);\n    }\n\n    if (a.indices !== b.indices) {\n      return false;\n    }\n\n    return isObjectEqual(a.attributes, b.attributes);\n  }\n\n  function isObjectEqual(a, b) {\n    if (Object.keys(a).length !== Object.keys(b).length) return false;\n\n    for (var key in a) {\n      if (a[key] !== b[key]) return false;\n    }\n\n    return true;\n  }\n\n  function isArrayEqual(a, b) {\n    if (a.length !== b.length) return false;\n\n    for (var i = 0, il = a.length; i < il; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  function getCachedGeometry(cache, newPrimitive) {\n    for (var i = 0, il = cache.length; i < il; i++) {\n      var cached = cache[i];\n      if (isPrimitiveEqual(cached.primitive, newPrimitive)) return cached.promise;\n    }\n\n    return null;\n  }\n\n  function getCachedCombinedGeometry(cache, geometries) {\n    for (var i = 0, il = cache.length; i < il; i++) {\n      var cached = cache[i];\n      if (isArrayEqual(geometries, cached.baseGeometries)) return cached.geometry;\n    }\n\n    return null;\n  }\n\n  function getCachedMultiPassGeometry(cache, geometry, primitives) {\n    for (var i = 0, il = cache.length; i < il; i++) {\n      var cached = cache[i];\n      if (geometry === cached.baseGeometry && isArrayEqual(primitives, cached.primitives)) return cached.geometry;\n    }\n\n    return null;\n  }\n\n  function cloneBufferAttribute(attribute) {\n    if (attribute.isInterleavedBufferAttribute) {\n      var count = attribute.count;\n      var itemSize = attribute.itemSize;\n      var array = attribute.array.slice(0, count * itemSize);\n\n      for (var i = 0, j = 0; i < count; ++i) {\n        array[j++] = attribute.getX(i);\n        if (itemSize >= 2) array[j++] = attribute.getY(i);\n        if (itemSize >= 3) array[j++] = attribute.getZ(i);\n        if (itemSize >= 4) array[j++] = attribute.getW(i);\n      }\n\n      return new BufferAttribute(array, itemSize, attribute.normalized);\n    }\n\n    return attribute.clone();\n  }\n  /**\r\n   * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\r\n   * Returns true if all primitives use the same attributes/morphAttributes/mode\r\n   * and also have index. Otherwise returns false.\r\n   *\r\n   * @param {Array<GLTF.Primitive>} primitives\r\n   * @return {Boolean}\r\n   */\n\n\n  function isMultiPassGeometry(primitives) {\n    if (primitives.length < 2) return false;\n    var primitive0 = primitives[0];\n    var targets0 = primitive0.targets || [];\n    if (primitive0.indices === undefined) return false;\n\n    for (var i = 1, il = primitives.length; i < il; i++) {\n      var primitive = primitives[i];\n      if (primitive0.mode !== primitive.mode) return false;\n      if (primitive.indices === undefined) return false;\n      if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) return false;\n      if (!isObjectEqual(primitive0.attributes, primitive.attributes)) return false;\n      var targets = primitive.targets || [];\n      if (targets0.length !== targets.length) return false;\n\n      for (var j = 0, jl = targets0.length; j < jl; j++) {\n        if (!isObjectEqual(targets0[j], targets[j])) return false;\n      }\n    }\n\n    return true;\n  }\n  /* GLTF PARSER */\n\n\n  function GLTFParser(json, extensions, options) {\n    this.json = json || {};\n    this.extensions = extensions || {};\n    this.options = options || {}; // loader object cache\n\n    this.cache = new GLTFRegistry(); // BufferGeometry caching\n\n    this.primitiveCache = [];\n    this.multiplePrimitivesCache = [];\n    this.multiPassGeometryCache = [];\n    this.textureLoader = new TextureLoader(this.options.manager);\n    this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n    this.fileLoader = new FileLoader(this.options.manager);\n    this.fileLoader.setResponseType('arraybuffer');\n  }\n\n  GLTFParser.prototype.parse = function (onLoad, onError) {\n    var json = this.json; // Clear the loader cache\n\n    this.cache.removeAll(); // Mark the special nodes/meshes in json for efficient parse\n\n    this.markDefs(); // Fire the callback on complete\n\n    this.getMultiDependencies(['scene', 'animation', 'camera']).then(function (dependencies) {\n      var scenes = dependencies.scenes || [];\n      var scene = scenes[json.scene || 0];\n      var animations = dependencies.animations || [];\n      var cameras = dependencies.cameras || [];\n      onLoad(scene, scenes, cameras, animations, json);\n    }).catch(onError);\n  };\n  /**\r\n   * Marks the special nodes/meshes in json for efficient parse.\r\n   */\n\n\n  GLTFParser.prototype.markDefs = function () {\n    var nodeDefs = this.json.nodes || [];\n    var skinDefs = this.json.skins || [];\n    var meshDefs = this.json.meshes || [];\n    var meshReferences = {};\n    var meshUses = {}; // Nothing in the node definition indicates whether it is a Bone or an\n    // Object3D. Use the skins' joint references to mark bones.\n\n    for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n      var joints = skinDefs[skinIndex].joints;\n\n      for (var i = 0, il = joints.length; i < il; i++) {\n        nodeDefs[joints[i]].isBone = true;\n      }\n    } // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n    // avoid having more than one Mesh with the same name, count\n    // references and rename instances below.\n    //\n    // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\n\n    for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n      var nodeDef = nodeDefs[nodeIndex];\n\n      if (nodeDef.mesh !== undefined) {\n        if (meshReferences[nodeDef.mesh] === undefined) {\n          meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n        }\n\n        meshReferences[nodeDef.mesh]++; // Nothing in the mesh definition indicates whether it is\n        // a SkinnedMesh or Mesh. Use the node's mesh reference\n        // to mark SkinnedMesh if node has skin.\n\n        if (nodeDef.skin !== undefined) {\n          meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n        }\n      }\n    }\n\n    this.json.meshReferences = meshReferences;\n    this.json.meshUses = meshUses;\n  };\n  /**\r\n   * Requests the specified dependency asynchronously, with caching.\r\n   * @param {string} type\r\n   * @param {number} index\r\n   * @return {Promise<Object3D|Material|Texture|AnimationClip|ArrayBuffer|Object>}\r\n   */\n\n\n  GLTFParser.prototype.getDependency = function (type, index) {\n    var cacheKey = type + ':' + index;\n    var dependency = this.cache.get(cacheKey);\n\n    if (!dependency) {\n      switch (type) {\n        case 'scene':\n          dependency = this.loadScene(index);\n          break;\n\n        case 'node':\n          dependency = this.loadNode(index);\n          break;\n\n        case 'mesh':\n          dependency = this.loadMesh(index);\n          break;\n\n        case 'accessor':\n          dependency = this.loadAccessor(index);\n          break;\n\n        case 'bufferView':\n          dependency = this.loadBufferView(index);\n          break;\n\n        case 'buffer':\n          dependency = this.loadBuffer(index);\n          break;\n\n        case 'material':\n          dependency = this.loadMaterial(index);\n          break;\n\n        case 'texture':\n          dependency = this.loadTexture(index);\n          break;\n\n        case 'skin':\n          dependency = this.loadSkin(index);\n          break;\n\n        case 'animation':\n          dependency = this.loadAnimation(index);\n          break;\n\n        case 'camera':\n          dependency = this.loadCamera(index);\n          break;\n\n        case 'light':\n          dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n          break;\n\n        default:\n          throw new Error('Unknown type: ' + type);\n      }\n\n      this.cache.add(cacheKey, dependency);\n    }\n\n    return dependency;\n  };\n  /**\r\n   * Requests all dependencies of the specified type asynchronously, with caching.\r\n   * @param {string} type\r\n   * @return {Promise<Array<Object>>}\r\n   */\n\n\n  GLTFParser.prototype.getDependencies = function (type) {\n    var dependencies = this.cache.get(type);\n\n    if (!dependencies) {\n      var parser = this;\n      var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n      dependencies = Promise.all(defs.map(function (def, index) {\n        return parser.getDependency(type, index);\n      }));\n      this.cache.add(type, dependencies);\n    }\n\n    return dependencies;\n  };\n  /**\r\n   * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n   * @param {Array<string>} types\r\n   * @return {Promise<Object<Array<Object>>>}\r\n   */\n\n\n  GLTFParser.prototype.getMultiDependencies = function (types) {\n    var results = {};\n    var pending = [];\n\n    for (var i = 0, il = types.length; i < il; i++) {\n      var type = types[i];\n      var value = this.getDependencies(type); // TODO: Error-prone use of a callback inside a loop.\n\n      value = value.then(function (key, value) {\n        results[key] = value;\n      }.bind(this, type + (type === 'mesh' ? 'es' : 's')));\n      pending.push(value);\n    }\n\n    return Promise.all(pending).then(function () {\n      return results;\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n   * @param {number} bufferIndex\r\n   * @return {Promise<ArrayBuffer>}\r\n   */\n\n\n  GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n    var bufferDef = this.json.buffers[bufferIndex];\n    var loader = this.fileLoader;\n\n    if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n      throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n    } // If present, GLB container is required to be the first buffer.\n\n\n    if (bufferDef.uri === undefined && bufferIndex === 0) {\n      return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n    }\n\n    var options = this.options;\n    return new Promise(function (resolve, reject) {\n      loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n        reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n      });\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n   * @param {number} bufferViewIndex\r\n   * @return {Promise<ArrayBuffer>}\r\n   */\n\n\n  GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n    var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n    return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n      var byteLength = bufferViewDef.byteLength || 0;\n      var byteOffset = bufferViewDef.byteOffset || 0;\n      return buffer.slice(byteOffset, byteOffset + byteLength);\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n   * @param {number} accessorIndex\r\n   * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\r\n   */\n\n\n  GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n    var parser = this;\n    var json = this.json;\n    var accessorDef = this.json.accessors[accessorIndex];\n\n    if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n      // Ignore empty accessors, which may be used to declare runtime\n      // information about attributes coming from another source (e.g. Draco\n      // compression extension).\n      return Promise.resolve(null);\n    }\n\n    var pendingBufferViews = [];\n\n    if (accessorDef.bufferView !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n    } else {\n      pendingBufferViews.push(null);\n    }\n\n    if (accessorDef.sparse !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n    }\n\n    return Promise.all(pendingBufferViews).then(function (bufferViews) {\n      var bufferView = bufferViews[0];\n      var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n      var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType]; // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\n      var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n      var itemBytes = elementBytes * itemSize;\n      var byteOffset = accessorDef.byteOffset || 0;\n      var byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n      var normalized = accessorDef.normalized === true;\n      var array, bufferAttribute; // The buffer is not interleaved if the stride is the item size in bytes.\n\n      if (byteStride && byteStride !== itemBytes) {\n        var ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n        var ib = parser.cache.get(ibCacheKey);\n\n        if (!ib) {\n          // Use the full buffer if it's interleaved.\n          array = new TypedArray(bufferView); // Integer parameters to IB/IBA are in array elements, not bytes.\n\n          ib = new InterleavedBuffer(array, byteStride / elementBytes);\n          parser.cache.add(ibCacheKey, ib);\n        }\n\n        bufferAttribute = new InterleavedBufferAttribute(ib, itemSize, byteOffset / elementBytes, normalized);\n      } else {\n        if (bufferView === null) {\n          array = new TypedArray(accessorDef.count * itemSize);\n        } else {\n          array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n        }\n\n        bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n      } // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\n\n      if (accessorDef.sparse !== undefined) {\n        var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n        var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n        var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n        var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n        var sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\n        var sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\n\n        if (bufferView !== null) {\n          // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n          bufferAttribute.setArray(bufferAttribute.array.slice());\n        }\n\n        for (var i = 0, il = sparseIndices.length; i < il; i++) {\n          var index = sparseIndices[i];\n          bufferAttribute.setX(index, sparseValues[i * itemSize]);\n          if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n          if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n          if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n          if (itemSize >= 5) throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n        }\n      }\n\n      return bufferAttribute;\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n   * @param {number} textureIndex\r\n   * @return {Promise<Texture>}\r\n   */\n\n\n  GLTFParser.prototype.loadTexture = function (textureIndex) {\n    var parser = this;\n    var json = this.json;\n    var options = this.options;\n    var textureLoader = this.textureLoader;\n    var URL = window.URL || window.webkitURL;\n    var textureDef = json.textures[textureIndex];\n    var textureExtensions = textureDef.extensions || {};\n    var source;\n\n    if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n      source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n    } else {\n      source = json.images[textureDef.source];\n    }\n\n    var sourceURI = source.uri;\n    var isObjectURL = false;\n\n    if (source.bufferView !== undefined) {\n      // Load binary image data from bufferView, if provided.\n      sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n        isObjectURL = true;\n        var blob = new Blob([bufferView], {\n          type: source.mimeType\n        });\n        sourceURI = URL.createObjectURL(blob);\n        return sourceURI;\n      });\n    }\n\n    return Promise.resolve(sourceURI).then(function (sourceURI) {\n      // Load Texture resource.\n      var loader = Loader.Handlers.get(sourceURI);\n\n      if (!loader) {\n        loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS] ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader : textureLoader;\n      }\n\n      return new Promise(function (resolve, reject) {\n        loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n      });\n    }).then(function (texture) {\n      // Clean up resources and configure Texture.\n      if (isObjectURL === true) {\n        URL.revokeObjectURL(sourceURI);\n      }\n\n      texture.flipY = false;\n      if (textureDef.name !== undefined) texture.name = textureDef.name; // Ignore unknown mime types, like DDS files.\n\n      if (source.mimeType in MIME_TYPE_FORMATS) {\n        texture.format = MIME_TYPE_FORMATS[source.mimeType];\n      }\n\n      var samplers = json.samplers || {};\n      var sampler = samplers[textureDef.sampler] || {};\n      texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n      texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipMapLinearFilter;\n      texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n      texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n      return texture;\n    });\n  };\n  /**\r\n   * Asynchronously assigns a texture to the given material parameters.\r\n   * @param {Object} materialParams\r\n   * @param {string} mapName\r\n   * @param {Object} mapDef\r\n   * @return {Promise}\r\n   */\n\n\n  GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n    var parser = this;\n    return this.getDependency('texture', mapDef.index).then(function (texture) {\n      if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n        var transform = mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n        if (transform) {\n          texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n        }\n      }\n\n      materialParams[mapName] = texture;\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n   * @param {number} materialIndex\r\n   * @return {Promise<Material>}\r\n   */\n\n\n  GLTFParser.prototype.loadMaterial = function (materialIndex) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions;\n    var materialDef = json.materials[materialIndex];\n    var materialType;\n    var materialParams = {};\n    var materialExtensions = materialDef.extensions || {};\n    var pending = [];\n\n    if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n      var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n      materialType = sgExtension.getMaterialType(materialDef);\n      pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n    } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n      var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n      materialType = kmuExtension.getMaterialType(materialDef);\n      pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n    } else {\n      // Specification:\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n      materialType = MeshStandardMaterial;\n      var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n      materialParams.color = new Color(1.0, 1.0, 1.0);\n      materialParams.opacity = 1.0;\n\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n\n      materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n      materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n      if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture));\n        pending.push(parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture));\n      }\n    }\n\n    if (materialDef.doubleSided === true) {\n      materialParams.side = DoubleSide;\n    }\n\n    var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n    if (alphaMode === ALPHA_MODES.BLEND) {\n      materialParams.transparent = true;\n    } else {\n      materialParams.transparent = false;\n\n      if (alphaMode === ALPHA_MODES.MASK) {\n        materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n      }\n    }\n\n    if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n      materialParams.normalScale = new Vector2(1, 1);\n\n      if (materialDef.normalTexture.scale !== undefined) {\n        materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n      }\n    }\n\n    if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n      if (materialDef.occlusionTexture.strength !== undefined) {\n        materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n      }\n    }\n\n    if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n      materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n    }\n\n    if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n    }\n\n    return Promise.all(pending).then(function () {\n      var material;\n\n      if (materialType === ShaderMaterial) {\n        material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n      } else {\n        material = new materialType(materialParams);\n      }\n\n      if (materialDef.name !== undefined) material.name = materialDef.name; // Normal map textures use OpenGL conventions:\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\n\n      if (material.normalScale) {\n        material.normalScale.y = -material.normalScale.y;\n      } // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\n\n      if (material.map) material.map.encoding = sRGBEncoding;\n      if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n      if (material.specularMap) material.specularMap.encoding = sRGBEncoding;\n      assignExtrasToUserData(material, materialDef);\n      if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n      return material;\n    });\n  };\n  /**\r\n   * @param {BufferGeometry} geometry\r\n   * @param {GLTF.Primitive} primitiveDef\r\n   * @param {GLTFParser} parser\r\n   * @return {Promise<BufferGeometry>}\r\n   */\n\n\n  function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n    var attributes = primitiveDef.attributes;\n    var pending = [];\n\n    function assignAttributeAccessor(accessorIndex, attributeName) {\n      return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n        geometry.addAttribute(attributeName, accessor);\n      });\n    }\n\n    for (var gltfAttributeName in attributes) {\n      var threeAttributeName = ATTRIBUTES[gltfAttributeName];\n      if (!threeAttributeName) continue; // Skip attributes already provided by e.g. Draco extension.\n\n      if (threeAttributeName in geometry.attributes) continue;\n      pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n    }\n\n    if (primitiveDef.indices !== undefined && !geometry.index) {\n      var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n        geometry.setIndex(accessor);\n      });\n      pending.push(accessor);\n    }\n\n    assignExtrasToUserData(geometry, primitiveDef);\n    return Promise.all(pending).then(function () {\n      return primitiveDef.targets !== undefined ? addMorphTargets(geometry, primitiveDef.targets, parser) : geometry;\n    });\n  }\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n   *\r\n   * Creates BufferGeometries from primitives.\r\n   * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\r\n   * Otherwise, returns BufferGeometries without .groups as many as primitives.\r\n   *\r\n   * @param {Array<GLTF.Primitive>} primitives\r\n   * @return {Promise<Array<BufferGeometry>>}\r\n   */\n\n\n  GLTFParser.prototype.loadGeometries = function (primitives) {\n    var parser = this;\n    var extensions = this.extensions;\n    var cache = this.primitiveCache;\n    var isMultiPass = isMultiPassGeometry(primitives);\n    var originalPrimitives;\n\n    if (isMultiPass) {\n      originalPrimitives = primitives; // save original primitives and use later\n      // We build a single BufferGeometry with .groups from multiple primitives\n      // because all primitives share the same attributes/morph/mode and have indices.\n\n      primitives = [primitives[0]]; // Sets .groups and combined indices to a geometry later in this method.\n    }\n\n    function createDracoPrimitive(primitive) {\n      return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive, parser).then(function (geometry) {\n        return addPrimitiveAttributes(geometry, primitive, parser);\n      });\n    }\n\n    var pending = [];\n\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var primitive = primitives[i]; // See if we've already created this geometry\n\n      var cached = getCachedGeometry(cache, primitive);\n\n      if (cached) {\n        // Use the cached geometry if it exists\n        pending.push(cached);\n      } else {\n        var geometryPromise;\n\n        if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n          // Use DRACO geometry if available\n          geometryPromise = createDracoPrimitive(primitive);\n        } else {\n          // Otherwise create a new geometry\n          geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n        } // Cache this geometry\n\n\n        cache.push({\n          primitive: primitive,\n          promise: geometryPromise\n        });\n        pending.push(geometryPromise);\n      }\n    }\n\n    return Promise.all(pending).then(function (geometries) {\n      if (isMultiPass) {\n        var baseGeometry = geometries[0]; // See if we've already created this combined geometry\n\n        var cache = parser.multiPassGeometryCache;\n        var cached = getCachedMultiPassGeometry(cache, baseGeometry, originalPrimitives);\n        if (cached !== null) return [cached.geometry]; // Cloning geometry because of index override.\n        // Attributes can be reused so cloning by myself here.\n\n        var geometry = new BufferGeometry();\n        geometry.name = baseGeometry.name;\n        geometry.userData = baseGeometry.userData;\n\n        for (var key in baseGeometry.attributes) {\n          geometry.addAttribute(key, baseGeometry.attributes[key]);\n        }\n\n        for (var key in baseGeometry.morphAttributes) {\n          geometry.morphAttributes[key] = baseGeometry.morphAttributes[key];\n        }\n\n        var pendingIndices = [];\n\n        for (var i = 0, il = originalPrimitives.length; i < il; i++) {\n          pendingIndices.push(parser.getDependency('accessor', originalPrimitives[i].indices));\n        }\n\n        return Promise.all(pendingIndices).then(function (accessors) {\n          var indices = [];\n          var offset = 0;\n\n          for (var i = 0, il = originalPrimitives.length; i < il; i++) {\n            var accessor = accessors[i];\n\n            for (var j = 0, jl = accessor.count; j < jl; j++) {\n              indices.push(accessor.array[j]);\n            }\n\n            geometry.addGroup(offset, accessor.count, i);\n            offset += accessor.count;\n          }\n\n          geometry.setIndex(indices);\n          cache.push({\n            geometry: geometry,\n            baseGeometry: baseGeometry,\n            primitives: originalPrimitives\n          });\n          return [geometry];\n        });\n      } else if (geometries.length > 1 && THREE.BufferGeometryUtils !== undefined) {\n        // Tries to merge geometries with BufferGeometryUtils if possible\n        for (var i = 1, il = primitives.length; i < il; i++) {\n          // can't merge if draw mode is different\n          if (primitives[0].mode !== primitives[i].mode) return geometries;\n        } // See if we've already created this combined geometry\n\n\n        var cache = parser.multiplePrimitivesCache;\n        var cached = getCachedCombinedGeometry(cache, geometries);\n\n        if (cached) {\n          if (cached.geometry !== null) return [cached.geometry];\n        } else {\n          var geometry = THREE.BufferGeometryUtils.mergeBufferGeometries(geometries, true);\n          cache.push({\n            geometry: geometry,\n            baseGeometries: geometries\n          });\n          if (geometry !== null) return [geometry];\n        }\n      }\n\n      return geometries;\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n   * @param {number} meshIndex\r\n   * @return {Promise<Group|Mesh|SkinnedMesh>}\r\n   */\n\n\n  GLTFParser.prototype.loadMesh = function (meshIndex) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions;\n    var meshDef = json.meshes[meshIndex];\n    var primitives = meshDef.primitives;\n    var pending = [];\n\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var material = primitives[i].material === undefined ? createDefaultMaterial() : this.getDependency('material', primitives[i].material);\n      pending.push(material);\n    }\n\n    return Promise.all(pending).then(function (originalMaterials) {\n      return parser.loadGeometries(primitives).then(function (geometries) {\n        var isMultiMaterial = geometries.length === 1 && geometries[0].groups.length > 0;\n        var meshes = [];\n\n        for (var i = 0, il = geometries.length; i < il; i++) {\n          var geometry = geometries[i];\n          var primitive = primitives[i]; // 1. create Mesh\n\n          var mesh;\n          var material = isMultiMaterial ? originalMaterials : originalMaterials[i];\n\n          if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined) {\n            // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n            mesh = meshDef.isSkinnedMesh === true ? new SkinnedMesh(geometry, material) : new Mesh(geometry, material);\n            if (mesh.isSkinnedMesh === true) mesh.normalizeSkinWeights(); // #15319\n\n            if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n              mesh.drawMode = TriangleStripDrawMode;\n            } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n              mesh.drawMode = TriangleFanDrawMode;\n            }\n          } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n            mesh = new LineSegments(geometry, material);\n          } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n            mesh = new Line(geometry, material);\n          } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n            mesh = new LineLoop(geometry, material);\n          } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n            mesh = new Points(geometry, material);\n          } else {\n            throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n          }\n\n          if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n            updateMorphTargets(mesh, meshDef);\n          }\n\n          mesh.name = meshDef.name || 'mesh_' + meshIndex;\n          if (geometries.length > 1) mesh.name += '_' + i;\n          assignExtrasToUserData(mesh, meshDef);\n          meshes.push(mesh); // 2. update Material depending on Mesh and BufferGeometry\n\n          var materials = isMultiMaterial ? mesh.material : [mesh.material];\n          var useVertexColors = geometry.attributes.color !== undefined;\n          var useFlatShading = geometry.attributes.normal === undefined;\n          var useSkinning = mesh.isSkinnedMesh === true;\n          var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n          var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n          for (var j = 0, jl = materials.length; j < jl; j++) {\n            var material = materials[j];\n\n            if (mesh.isPoints) {\n              var cacheKey = 'PointsMaterial:' + material.uuid;\n              var pointsMaterial = parser.cache.get(cacheKey);\n\n              if (!pointsMaterial) {\n                pointsMaterial = new PointsMaterial();\n                Material.prototype.copy.call(pointsMaterial, material);\n                pointsMaterial.color.copy(material.color);\n                pointsMaterial.map = material.map;\n                pointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n                parser.cache.add(cacheKey, pointsMaterial);\n              }\n\n              material = pointsMaterial;\n            } else if (mesh.isLine) {\n              var cacheKey = 'LineBasicMaterial:' + material.uuid;\n              var lineMaterial = parser.cache.get(cacheKey);\n\n              if (!lineMaterial) {\n                lineMaterial = new LineBasicMaterial();\n                Material.prototype.copy.call(lineMaterial, material);\n                lineMaterial.color.copy(material.color);\n                lineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n                parser.cache.add(cacheKey, lineMaterial);\n              }\n\n              material = lineMaterial;\n            } // Clone the material if it will be modified\n\n\n            if (useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n              var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n              if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n              if (useSkinning) cacheKey += 'skinning:';\n              if (useVertexColors) cacheKey += 'vertex-colors:';\n              if (useFlatShading) cacheKey += 'flat-shading:';\n              if (useMorphTargets) cacheKey += 'morph-targets:';\n              if (useMorphNormals) cacheKey += 'morph-normals:';\n              var cachedMaterial = parser.cache.get(cacheKey);\n\n              if (!cachedMaterial) {\n                cachedMaterial = material.isGLTFSpecularGlossinessMaterial ? extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(material) : material.clone();\n                if (useSkinning) cachedMaterial.skinning = true;\n                if (useVertexColors) cachedMaterial.vertexColors = VertexColors;\n                if (useFlatShading) cachedMaterial.flatShading = true;\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\n                parser.cache.add(cacheKey, cachedMaterial);\n              }\n\n              material = cachedMaterial;\n            }\n\n            materials[j] = material; // workarounds for mesh and geometry\n\n            if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n              console.log('THREE.GLTFLoader: Duplicating UVs to support aoMap.');\n              geometry.addAttribute('uv2', new BufferAttribute(geometry.attributes.uv.array, 2));\n            }\n\n            if (material.isGLTFSpecularGlossinessMaterial) {\n              // for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n              mesh.onBeforeRender = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;\n            }\n          }\n\n          mesh.material = isMultiMaterial ? materials : materials[0];\n        }\n\n        if (meshes.length === 1) {\n          return meshes[0];\n        }\n\n        var group = new Group();\n\n        for (var i = 0, il = meshes.length; i < il; i++) {\n          group.add(meshes[i]);\n        }\n\n        return group;\n      });\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n   * @param {number} cameraIndex\r\n   * @return {Promise<Camera>}\r\n   */\n\n\n  GLTFParser.prototype.loadCamera = function (cameraIndex) {\n    var camera;\n    var cameraDef = this.json.cameras[cameraIndex];\n    var params = cameraDef[cameraDef.type];\n\n    if (!params) {\n      console.warn('THREE.GLTFLoader: Missing camera parameters.');\n      return;\n    }\n\n    if (cameraDef.type === 'perspective') {\n      camera = new PerspectiveCamera(Math.radToDeg(params.yfov), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6);\n    } else if (cameraDef.type === 'orthographic') {\n      camera = new OrthographicCamera(params.xmag / -2, params.xmag / 2, params.ymag / 2, params.ymag / -2, params.znear, params.zfar);\n    }\n\n    if (cameraDef.name !== undefined) camera.name = cameraDef.name;\n    assignExtrasToUserData(camera, cameraDef);\n    return Promise.resolve(camera);\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n   * @param {number} skinIndex\r\n   * @return {Promise<Object>}\r\n   */\n\n\n  GLTFParser.prototype.loadSkin = function (skinIndex) {\n    var skinDef = this.json.skins[skinIndex];\n    var skinEntry = {\n      joints: skinDef.joints\n    };\n\n    if (skinDef.inverseBindMatrices === undefined) {\n      return Promise.resolve(skinEntry);\n    }\n\n    return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n      skinEntry.inverseBindMatrices = accessor;\n      return skinEntry;\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n   * @param {number} animationIndex\r\n   * @return {Promise<AnimationClip>}\r\n   */\n\n\n  GLTFParser.prototype.loadAnimation = function (animationIndex) {\n    var json = this.json;\n    var animationDef = json.animations[animationIndex];\n    var pendingNodes = [];\n    var pendingInputAccessors = [];\n    var pendingOutputAccessors = [];\n    var pendingSamplers = [];\n    var pendingTargets = [];\n\n    for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n      var channel = animationDef.channels[i];\n      var sampler = animationDef.samplers[channel.sampler];\n      var target = channel.target;\n      var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\n      var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n      var output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n      pendingNodes.push(this.getDependency('node', name));\n      pendingInputAccessors.push(this.getDependency('accessor', input));\n      pendingOutputAccessors.push(this.getDependency('accessor', output));\n      pendingSamplers.push(sampler);\n      pendingTargets.push(target);\n    }\n\n    return Promise.all([Promise.all(pendingNodes), Promise.all(pendingInputAccessors), Promise.all(pendingOutputAccessors), Promise.all(pendingSamplers), Promise.all(pendingTargets)]).then(function (dependencies) {\n      var nodes = dependencies[0];\n      var inputAccessors = dependencies[1];\n      var outputAccessors = dependencies[2];\n      var samplers = dependencies[3];\n      var targets = dependencies[4];\n      var tracks = [];\n\n      for (var i = 0, il = nodes.length; i < il; i++) {\n        var node = nodes[i];\n        var inputAccessor = inputAccessors[i];\n        var outputAccessor = outputAccessors[i];\n        var sampler = samplers[i];\n        var target = targets[i];\n        if (node === undefined) continue;\n        node.updateMatrix();\n        node.matrixAutoUpdate = true;\n        var TypedKeyframeTrack;\n\n        switch (PATH_PROPERTIES[target.path]) {\n          case PATH_PROPERTIES.weights:\n            TypedKeyframeTrack = NumberKeyframeTrack;\n            break;\n\n          case PATH_PROPERTIES.rotation:\n            TypedKeyframeTrack = QuaternionKeyframeTrack;\n            break;\n\n          case PATH_PROPERTIES.position:\n          case PATH_PROPERTIES.scale:\n          default:\n            TypedKeyframeTrack = VectorKeyframeTrack;\n            break;\n        }\n\n        var targetName = node.name ? node.name : node.uuid;\n        var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n        var targetNames = [];\n\n        if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n          // node can be Group here but\n          // PATH_PROPERTIES.weights(morphTargetInfluences) should be\n          // the property of a mesh object under group.\n          node.traverse(function (object) {\n            if (object.isMesh === true && object.morphTargetInfluences) {\n              targetNames.push(object.name ? object.name : object.uuid);\n            }\n          });\n        } else {\n          targetNames.push(targetName);\n        } // KeyframeTrack.optimize() will modify given 'times' and 'values'\n        // buffers before creating a truncated copy to keep. Because buffers may\n        // be reused by other tracks, make copies here.\n\n\n        for (var j = 0, jl = targetNames.length; j < jl; j++) {\n          var track = new TypedKeyframeTrack(targetNames[j] + '.' + PATH_PROPERTIES[target.path], AnimationUtils.arraySlice(inputAccessor.array, 0), AnimationUtils.arraySlice(outputAccessor.array, 0), interpolation); // Here is the trick to enable custom interpolation.\n          // Overrides .createInterpolant in a factory method which creates custom interpolation.\n\n          if (sampler.interpolation === 'CUBICSPLINE') {\n            track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n              // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n              // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n              // must be divided by three to get the interpolant's sampleSize argument.\n              return new GLTFCubicSplineInterpolant(this.times, this.values, this.getValueSize() / 3, result);\n            }; // Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\n            // track.getInterpolation() doesn't return valid value for custom interpolant.\n\n\n            track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n          }\n\n          tracks.push(track);\n        }\n      }\n\n      var name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n      return new AnimationClip(name, undefined, tracks);\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n   * @param {number} nodeIndex\r\n   * @return {Promise<Object3D>}\r\n   */\n\n\n  GLTFParser.prototype.loadNode = function (nodeIndex) {\n    var json = this.json;\n    var extensions = this.extensions;\n    var parser = this;\n    var meshReferences = json.meshReferences;\n    var meshUses = json.meshUses;\n    var nodeDef = json.nodes[nodeIndex];\n    return function () {\n      // .isBone isn't in glTF spec. See .markDefs\n      if (nodeDef.isBone === true) {\n        return Promise.resolve(new Bone());\n      } else if (nodeDef.mesh !== undefined) {\n        return parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n          var node;\n\n          if (meshReferences[nodeDef.mesh] > 1) {\n            var instanceNum = meshUses[nodeDef.mesh]++;\n            node = mesh.clone();\n            node.name += '_instance_' + instanceNum; // onBeforeRender copy for Specular-Glossiness\n\n            node.onBeforeRender = mesh.onBeforeRender;\n\n            for (var i = 0, il = node.children.length; i < il; i++) {\n              node.children[i].name += '_instance_' + instanceNum;\n              node.children[i].onBeforeRender = mesh.children[i].onBeforeRender;\n            }\n          } else {\n            node = mesh;\n          } // if weights are provided on the node, override weights on the mesh.\n\n\n          if (nodeDef.weights !== undefined) {\n            node.traverse(function (o) {\n              if (!o.isMesh) return;\n\n              for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                o.morphTargetInfluences[i] = nodeDef.weights[i];\n              }\n            });\n          }\n\n          return node;\n        });\n      } else if (nodeDef.camera !== undefined) {\n        return parser.getDependency('camera', nodeDef.camera);\n      } else if (nodeDef.extensions && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined) {\n        return parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light);\n      } else {\n        return Promise.resolve(new Object3D());\n      }\n    }().then(function (node) {\n      if (nodeDef.name !== undefined) {\n        node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n      }\n\n      assignExtrasToUserData(node, nodeDef);\n      if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n      if (nodeDef.matrix !== undefined) {\n        var matrix = new Matrix4();\n        matrix.fromArray(nodeDef.matrix);\n        node.applyMatrix(matrix);\n      } else {\n        if (nodeDef.translation !== undefined) {\n          node.position.fromArray(nodeDef.translation);\n        }\n\n        if (nodeDef.rotation !== undefined) {\n          node.quaternion.fromArray(nodeDef.rotation);\n        }\n\n        if (nodeDef.scale !== undefined) {\n          node.scale.fromArray(nodeDef.scale);\n        }\n      }\n\n      return node;\n    });\n  };\n  /**\r\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n   * @param {number} sceneIndex\r\n   * @return {Promise<Scene>}\r\n   */\n\n\n  GLTFParser.prototype.loadScene = function () {\n    // scene node hierachy builder\n    function buildNodeHierachy(nodeId, parentObject, json, parser) {\n      var nodeDef = json.nodes[nodeId];\n      return parser.getDependency('node', nodeId).then(function (node) {\n        if (nodeDef.skin === undefined) return node; // build skeleton here as well\n\n        var skinEntry;\n        return parser.getDependency('skin', nodeDef.skin).then(function (skin) {\n          skinEntry = skin;\n          var pendingJoints = [];\n\n          for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n            pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n          }\n\n          return Promise.all(pendingJoints);\n        }).then(function (jointNodes) {\n          var meshes = node.isGroup === true ? node.children : [node];\n\n          for (var i = 0, il = meshes.length; i < il; i++) {\n            var mesh = meshes[i];\n            var bones = [];\n            var boneInverses = [];\n\n            for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n              var jointNode = jointNodes[j];\n\n              if (jointNode) {\n                bones.push(jointNode);\n                var mat = new Matrix4();\n\n                if (skinEntry.inverseBindMatrices !== undefined) {\n                  mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                }\n\n                boneInverses.push(mat);\n              } else {\n                console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[j]);\n              }\n            }\n\n            mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n          }\n\n          return node;\n        });\n      }).then(function (node) {\n        // build node hierachy\n        parentObject.add(node);\n        var pending = [];\n\n        if (nodeDef.children) {\n          var children = nodeDef.children;\n\n          for (var i = 0, il = children.length; i < il; i++) {\n            var child = children[i];\n            pending.push(buildNodeHierachy(child, node, json, parser));\n          }\n        }\n\n        return Promise.all(pending);\n      });\n    }\n\n    return function loadScene(sceneIndex) {\n      var json = this.json;\n      var extensions = this.extensions;\n      var sceneDef = this.json.scenes[sceneIndex];\n      var parser = this;\n      var scene = new Scene();\n      if (sceneDef.name !== undefined) scene.name = sceneDef.name;\n      assignExtrasToUserData(scene, sceneDef);\n      if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n      var nodeIds = sceneDef.nodes || [];\n      var pending = [];\n\n      for (var i = 0, il = nodeIds.length; i < il; i++) {\n        pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n      }\n\n      return Promise.all(pending).then(function () {\n        return scene;\n      });\n    };\n  }();\n\n  return GLTFLoader;\n}();\n\nexport { GLTFLoader };","import {\r\n  AnimationMixer,\r\n  Vector3,\r\n} from 'three';\r\n\r\nimport createAsyncLoader from './vendor/utility/createAsyncLoader.module.js';\r\n\r\nimport { GLTFLoader } from './vendor/three/loaders/GLTFLoader.module.js';\r\n\r\nfunction setupModel( gltf, position ) {\r\n\r\n  const model = gltf.scene.children[ 0 ];\r\n  model.position.copy( position );\r\n\r\n  const animation = gltf.animations[ 0 ];\r\n\r\n  const mixer = new AnimationMixer( model );\r\n\r\n  model.userData.onUpdate = ( delta ) => {\r\n\r\n    mixer.update( delta );\r\n\r\n  };\r\n\r\n  const action = mixer.clipAction( animation );\r\n  action.play();\r\n\r\n  return model;\r\n\r\n}\r\n\r\nexport default async function loadModels() {\r\n\r\n  const loader = createAsyncLoader( new GLTFLoader() );\r\n\r\n  const parrot = setupModel(\r\n    await loader.load( 'assets/models//Parrot.glb' ),\r\n    new Vector3( 0, 0, 2.5 ),\r\n  );\r\n\r\n  const flamingo = setupModel(\r\n    await loader.load( 'assets/models//Flamingo.glb' ),\r\n    new Vector3( 7.5, 0, -10 ),\r\n  );\r\n\r\n  const stork = setupModel(\r\n    await loader.load( 'assets/models//Stork.glb' ),\r\n    new Vector3( 0, -2.5, -10 ),\r\n  );\r\n\r\n  return { parrot, flamingo, stork };\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport { Color } from 'three';\r\nimport ThreeApp from './vendor/App.module.js';\r\n\r\nimport createLights from './lights.js';\r\nimport loadModels from './models.js';\r\n\r\nclass Scene extends React.Component {\r\n\r\n  // this function gets called after the <div id=\"container\">\r\n  // has been added by the render() function\r\n  async componentDidMount() {\r\n\r\n    this.app = new ThreeApp( '#container' );\r\n\r\n    this.app.init();\r\n\r\n    this.app.scene.background = new Color( 0x8FBCD4 );\r\n    this.app.camera.position.set( -2.5, 2.5, 6 );\r\n\r\n    this.app.start();\r\n\r\n    const lights = createLights();\r\n    this.app.scene.add( lights.ambient, lights.main );\r\n\r\n    const models = await loadModels();\r\n    this.app.scene.add( models.parrot, models.flamingo, models.stork );\r\n\r\n  }\r\n\r\n  componentWillUnmount(){\r\n\r\n    this.app.stop()\r\n    this.mount.removeChild(this.app.renderer.domElement)\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"container\"\r\n        ref={(mount) => { this.mount = mount }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scene;","import {\r\n  HemisphereLight,\r\n  DirectionalLight,\r\n} from 'three';\r\n\r\nexport default function createLights() {\r\n\r\n  const ambient = new HemisphereLight( 0xddeeff, 0x0f0e0d, 5 );\r\n\r\n  const main = new DirectionalLight( 0xfffffc, 15 );\r\n  main.position.set( 0, 1, -10 );\r\n\r\n  return { ambient, main };\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './main.css';\r\n\r\nimport Title from './js/Title';\r\nimport Scene from './js/Scene';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title />\r\n        <Scene className=\"container\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}